// Code generated by protoc-gen-go. DO NOT EDIT.
// source: third_track.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ThirdTrackInfo_LocationType int32

const (
	ThirdTrackInfo_Gps  ThirdTrackInfo_LocationType = 0
	ThirdTrackInfo_WIFI ThirdTrackInfo_LocationType = 1
)

var ThirdTrackInfo_LocationType_name = map[int32]string{
	0: "Gps",
	1: "WIFI",
}

var ThirdTrackInfo_LocationType_value = map[string]int32{
	"Gps":  0,
	"WIFI": 1,
}

func (x ThirdTrackInfo_LocationType) Enum() *ThirdTrackInfo_LocationType {
	p := new(ThirdTrackInfo_LocationType)
	*p = x
	return p
}

func (x ThirdTrackInfo_LocationType) String() string {
	return proto.EnumName(ThirdTrackInfo_LocationType_name, int32(x))
}

func (x *ThirdTrackInfo_LocationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdTrackInfo_LocationType_value, data, "ThirdTrackInfo_LocationType")
	if err != nil {
		return err
	}
	*x = ThirdTrackInfo_LocationType(value)
	return nil
}

func (ThirdTrackInfo_LocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{0, 0}
}

type ThirdTrackInfo_LocationMode int32

const (
	ThirdTrackInfo_D3 ThirdTrackInfo_LocationMode = 0
	ThirdTrackInfo_D2 ThirdTrackInfo_LocationMode = 1
)

var ThirdTrackInfo_LocationMode_name = map[int32]string{
	0: "D3",
	1: "D2",
}

var ThirdTrackInfo_LocationMode_value = map[string]int32{
	"D3": 0,
	"D2": 1,
}

func (x ThirdTrackInfo_LocationMode) Enum() *ThirdTrackInfo_LocationMode {
	p := new(ThirdTrackInfo_LocationMode)
	*p = x
	return p
}

func (x ThirdTrackInfo_LocationMode) String() string {
	return proto.EnumName(ThirdTrackInfo_LocationMode_name, int32(x))
}

func (x *ThirdTrackInfo_LocationMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdTrackInfo_LocationMode_value, data, "ThirdTrackInfo_LocationMode")
	if err != nil {
		return err
	}
	*x = ThirdTrackInfo_LocationMode(value)
	return nil
}

func (ThirdTrackInfo_LocationMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{0, 1}
}

type ThirdTrackInfo_CoordinateType int32

const (
	ThirdTrackInfo_WGS84 ThirdTrackInfo_CoordinateType = 0
	ThirdTrackInfo_GCJ02 ThirdTrackInfo_CoordinateType = 1
)

var ThirdTrackInfo_CoordinateType_name = map[int32]string{
	0: "WGS84",
	1: "GCJ02",
}

var ThirdTrackInfo_CoordinateType_value = map[string]int32{
	"WGS84": 0,
	"GCJ02": 1,
}

func (x ThirdTrackInfo_CoordinateType) Enum() *ThirdTrackInfo_CoordinateType {
	p := new(ThirdTrackInfo_CoordinateType)
	*p = x
	return p
}

func (x ThirdTrackInfo_CoordinateType) String() string {
	return proto.EnumName(ThirdTrackInfo_CoordinateType_name, int32(x))
}

func (x *ThirdTrackInfo_CoordinateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdTrackInfo_CoordinateType_value, data, "ThirdTrackInfo_CoordinateType")
	if err != nil {
		return err
	}
	*x = ThirdTrackInfo_CoordinateType(value)
	return nil
}

func (ThirdTrackInfo_CoordinateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{0, 2}
}

type ThirdTrackInfo struct {
	GpsTime              *int64                         `protobuf:"varint,1,req,name=gps_time,json=gpsTime" json:"gps_time,omitempty"`
	Latitude             *float64                       `protobuf:"fixed64,2,req,name=latitude" json:"latitude,omitempty"`
	Longitude            *float64                       `protobuf:"fixed64,3,req,name=longitude" json:"longitude,omitempty"`
	Altitude             *float64                       `protobuf:"fixed64,4,req,name=altitude" json:"altitude,omitempty"`
	Accuracy             *float64                       `protobuf:"fixed64,5,req,name=accuracy" json:"accuracy,omitempty"`
	GpsBearing           *float64                       `protobuf:"fixed64,6,req,name=gps_bearing,json=gpsBearing" json:"gps_bearing,omitempty"`
	Speed                *float64                       `protobuf:"fixed64,7,req,name=speed" json:"speed,omitempty"`
	LocationType         *ThirdTrackInfo_LocationType   `protobuf:"varint,8,req,name=location_type,json=locationType,enum=main.ThirdTrackInfo_LocationType" json:"location_type,omitempty"`
	LocationMode         *ThirdTrackInfo_LocationMode   `protobuf:"varint,9,req,name=location_mode,json=locationMode,enum=main.ThirdTrackInfo_LocationMode" json:"location_mode,omitempty"`
	CoordinateType       *ThirdTrackInfo_CoordinateType `protobuf:"varint,10,req,name=coordinate_type,json=coordinateType,enum=main.ThirdTrackInfo_CoordinateType" json:"coordinate_type,omitempty"`
	VDop                 *float64                       `protobuf:"fixed64,11,opt,name=v_dop,json=vDop" json:"v_dop,omitempty"`
	HDop                 *float64                       `protobuf:"fixed64,12,opt,name=h_dop,json=hDop" json:"h_dop,omitempty"`
	StarNum              *int32                         `protobuf:"varint,13,opt,name=star_num,json=starNum" json:"star_num,omitempty"`
	SystemTime           *int64                         `protobuf:"varint,14,opt,name=system_time,json=systemTime" json:"system_time,omitempty"`
	PhoneDirection       *int32                         `protobuf:"varint,15,opt,name=phone_direction,json=phoneDirection" json:"phone_direction,omitempty"`
	IsMockGps            *bool                          `protobuf:"varint,16,opt,name=is_mock_gps,json=isMockGps" json:"is_mock_gps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ThirdTrackInfo) Reset()         { *m = ThirdTrackInfo{} }
func (m *ThirdTrackInfo) String() string { return proto.CompactTextString(m) }
func (*ThirdTrackInfo) ProtoMessage()    {}
func (*ThirdTrackInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{0}
}

func (m *ThirdTrackInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdTrackInfo.Unmarshal(m, b)
}
func (m *ThirdTrackInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdTrackInfo.Marshal(b, m, deterministic)
}
func (m *ThirdTrackInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdTrackInfo.Merge(m, src)
}
func (m *ThirdTrackInfo) XXX_Size() int {
	return xxx_messageInfo_ThirdTrackInfo.Size(m)
}
func (m *ThirdTrackInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdTrackInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdTrackInfo proto.InternalMessageInfo

func (m *ThirdTrackInfo) GetGpsTime() int64 {
	if m != nil && m.GpsTime != nil {
		return *m.GpsTime
	}
	return 0
}

func (m *ThirdTrackInfo) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *ThirdTrackInfo) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *ThirdTrackInfo) GetAltitude() float64 {
	if m != nil && m.Altitude != nil {
		return *m.Altitude
	}
	return 0
}

func (m *ThirdTrackInfo) GetAccuracy() float64 {
	if m != nil && m.Accuracy != nil {
		return *m.Accuracy
	}
	return 0
}

func (m *ThirdTrackInfo) GetGpsBearing() float64 {
	if m != nil && m.GpsBearing != nil {
		return *m.GpsBearing
	}
	return 0
}

func (m *ThirdTrackInfo) GetSpeed() float64 {
	if m != nil && m.Speed != nil {
		return *m.Speed
	}
	return 0
}

func (m *ThirdTrackInfo) GetLocationType() ThirdTrackInfo_LocationType {
	if m != nil && m.LocationType != nil {
		return *m.LocationType
	}
	return ThirdTrackInfo_Gps
}

func (m *ThirdTrackInfo) GetLocationMode() ThirdTrackInfo_LocationMode {
	if m != nil && m.LocationMode != nil {
		return *m.LocationMode
	}
	return ThirdTrackInfo_D3
}

func (m *ThirdTrackInfo) GetCoordinateType() ThirdTrackInfo_CoordinateType {
	if m != nil && m.CoordinateType != nil {
		return *m.CoordinateType
	}
	return ThirdTrackInfo_WGS84
}

func (m *ThirdTrackInfo) GetVDop() float64 {
	if m != nil && m.VDop != nil {
		return *m.VDop
	}
	return 0
}

func (m *ThirdTrackInfo) GetHDop() float64 {
	if m != nil && m.HDop != nil {
		return *m.HDop
	}
	return 0
}

func (m *ThirdTrackInfo) GetStarNum() int32 {
	if m != nil && m.StarNum != nil {
		return *m.StarNum
	}
	return 0
}

func (m *ThirdTrackInfo) GetSystemTime() int64 {
	if m != nil && m.SystemTime != nil {
		return *m.SystemTime
	}
	return 0
}

func (m *ThirdTrackInfo) GetPhoneDirection() int32 {
	if m != nil && m.PhoneDirection != nil {
		return *m.PhoneDirection
	}
	return 0
}

func (m *ThirdTrackInfo) GetIsMockGps() bool {
	if m != nil && m.IsMockGps != nil {
		return *m.IsMockGps
	}
	return false
}

type ThirdTrackReport struct {
	Ak                   *string           `protobuf:"bytes,1,req,name=ak" json:"ak,omitempty"`
	ServiceId            *int32            `protobuf:"varint,2,req,name=service_id,json=serviceId" json:"service_id,omitempty"`
	FacilityId           *string           `protobuf:"bytes,3,req,name=facility_id,json=facilityId" json:"facility_id,omitempty"`
	Tracks               []*ThirdTrackInfo `protobuf:"bytes,4,rep,name=tracks" json:"tracks,omitempty"`
	PbVersion            *int32            `protobuf:"varint,5,req,name=pb_version,json=pbVersion" json:"pb_version,omitempty"`
	StartTime            *int32            `protobuf:"varint,6,req,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime              *int32            `protobuf:"varint,7,req,name=end_time,json=endTime" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ThirdTrackReport) Reset()         { *m = ThirdTrackReport{} }
func (m *ThirdTrackReport) String() string { return proto.CompactTextString(m) }
func (*ThirdTrackReport) ProtoMessage()    {}
func (*ThirdTrackReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{1}
}

func (m *ThirdTrackReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdTrackReport.Unmarshal(m, b)
}
func (m *ThirdTrackReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdTrackReport.Marshal(b, m, deterministic)
}
func (m *ThirdTrackReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdTrackReport.Merge(m, src)
}
func (m *ThirdTrackReport) XXX_Size() int {
	return xxx_messageInfo_ThirdTrackReport.Size(m)
}
func (m *ThirdTrackReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdTrackReport.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdTrackReport proto.InternalMessageInfo

func (m *ThirdTrackReport) GetAk() string {
	if m != nil && m.Ak != nil {
		return *m.Ak
	}
	return ""
}

func (m *ThirdTrackReport) GetServiceId() int32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *ThirdTrackReport) GetFacilityId() string {
	if m != nil && m.FacilityId != nil {
		return *m.FacilityId
	}
	return ""
}

func (m *ThirdTrackReport) GetTracks() []*ThirdTrackInfo {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func (m *ThirdTrackReport) GetPbVersion() int32 {
	if m != nil && m.PbVersion != nil {
		return *m.PbVersion
	}
	return 0
}

func (m *ThirdTrackReport) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ThirdTrackReport) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type ThirdTrackResp struct {
	Errno                *int32   `protobuf:"varint,1,req,name=errno" json:"errno,omitempty"`
	Msg                  *string  `protobuf:"bytes,2,req,name=msg" json:"msg,omitempty"`
	FacilityId           *string  `protobuf:"bytes,3,req,name=facility_id,json=facilityId" json:"facility_id,omitempty"`
	ServiceId            *int32   `protobuf:"varint,4,req,name=service_id,json=serviceId" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThirdTrackResp) Reset()         { *m = ThirdTrackResp{} }
func (m *ThirdTrackResp) String() string { return proto.CompactTextString(m) }
func (*ThirdTrackResp) ProtoMessage()    {}
func (*ThirdTrackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{2}
}

func (m *ThirdTrackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdTrackResp.Unmarshal(m, b)
}
func (m *ThirdTrackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdTrackResp.Marshal(b, m, deterministic)
}
func (m *ThirdTrackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdTrackResp.Merge(m, src)
}
func (m *ThirdTrackResp) XXX_Size() int {
	return xxx_messageInfo_ThirdTrackResp.Size(m)
}
func (m *ThirdTrackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdTrackResp.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdTrackResp proto.InternalMessageInfo

func (m *ThirdTrackResp) GetErrno() int32 {
	if m != nil && m.Errno != nil {
		return *m.Errno
	}
	return 0
}

func (m *ThirdTrackResp) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *ThirdTrackResp) GetFacilityId() string {
	if m != nil && m.FacilityId != nil {
		return *m.FacilityId
	}
	return ""
}

func (m *ThirdTrackResp) GetServiceId() int32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

//private message between device and pfd cloud server
//the data will be re-packed to tencent/baidu/gaode data format
type TrackData struct {
	Tracks               []*ThirdTrackInfo `protobuf:"bytes,1,rep,name=tracks" json:"tracks,omitempty"`
	StartTime            *int32            `protobuf:"varint,2,req,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime              *int32            `protobuf:"varint,3,req,name=end_time,json=endTime" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TrackData) Reset()         { *m = TrackData{} }
func (m *TrackData) String() string { return proto.CompactTextString(m) }
func (*TrackData) ProtoMessage()    {}
func (*TrackData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b29b7170df08ef7, []int{3}
}

func (m *TrackData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackData.Unmarshal(m, b)
}
func (m *TrackData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackData.Marshal(b, m, deterministic)
}
func (m *TrackData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackData.Merge(m, src)
}
func (m *TrackData) XXX_Size() int {
	return xxx_messageInfo_TrackData.Size(m)
}
func (m *TrackData) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackData.DiscardUnknown(m)
}

var xxx_messageInfo_TrackData proto.InternalMessageInfo

func (m *TrackData) GetTracks() []*ThirdTrackInfo {
	if m != nil {
		return m.Tracks
	}
	return nil
}

func (m *TrackData) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *TrackData) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("main.ThirdTrackInfo_LocationType", ThirdTrackInfo_LocationType_name, ThirdTrackInfo_LocationType_value)
	proto.RegisterEnum("main.ThirdTrackInfo_LocationMode", ThirdTrackInfo_LocationMode_name, ThirdTrackInfo_LocationMode_value)
	proto.RegisterEnum("main.ThirdTrackInfo_CoordinateType", ThirdTrackInfo_CoordinateType_name, ThirdTrackInfo_CoordinateType_value)
	proto.RegisterType((*ThirdTrackInfo)(nil), "main.ThirdTrackInfo")
	proto.RegisterType((*ThirdTrackReport)(nil), "main.ThirdTrackReport")
	proto.RegisterType((*ThirdTrackResp)(nil), "main.ThirdTrackResp")
	proto.RegisterType((*TrackData)(nil), "main.TrackData")
}

func init() { proto.RegisterFile("third_track.proto", fileDescriptor_0b29b7170df08ef7) }

var fileDescriptor_0b29b7170df08ef7 = []byte{
	// 619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x5d, 0x92, 0xa6, 0x6d, 0x6e, 0xb7, 0x2c, 0x98, 0x3d, 0x64, 0x08, 0x46, 0x56, 0x24, 0xc8,
	0x03, 0xaa, 0xd0, 0xe0, 0x81, 0x67, 0x56, 0xad, 0x2a, 0xda, 0x78, 0x30, 0x15, 0x7b, 0x8c, 0xbc,
	0xc4, 0x4b, 0xad, 0x36, 0xb1, 0x65, 0xbb, 0x15, 0xfd, 0x47, 0x7e, 0x84, 0xbf, 0x40, 0x76, 0xb2,
	0xad, 0x45, 0x13, 0xec, 0xa9, 0x3d, 0xe7, 0x5c, 0x5f, 0xdf, 0x73, 0x6e, 0x0c, 0xcf, 0xf4, 0x9c,
	0xc9, 0x22, 0xd3, 0x92, 0xe4, 0x8b, 0x91, 0x90, 0x5c, 0x73, 0xd4, 0xa9, 0x08, 0xab, 0x87, 0xbf,
	0x7c, 0x08, 0x67, 0x46, 0x9b, 0x19, 0x69, 0x5a, 0xdf, 0x72, 0x74, 0x0c, 0xfd, 0x52, 0xa8, 0x4c,
	0xb3, 0x8a, 0xc6, 0x4e, 0xe2, 0xa6, 0x1e, 0xee, 0x95, 0x42, 0xcd, 0x58, 0x45, 0xd1, 0x0b, 0xe8,
	0x2f, 0x89, 0x66, 0x7a, 0x55, 0xd0, 0xd8, 0x4d, 0xdc, 0xd4, 0xc1, 0xf7, 0x18, 0xbd, 0x84, 0x60,
	0xc9, 0xeb, 0xb2, 0x11, 0x3d, 0x2b, 0x3e, 0x10, 0xe6, 0x24, 0x59, 0xb6, 0x27, 0x3b, 0xcd, 0xc9,
	0x3b, 0x6c, 0xb5, 0x3c, 0x5f, 0x49, 0x92, 0x6f, 0x62, 0xbf, 0xd5, 0x5a, 0x8c, 0x5e, 0xc3, 0xc0,
	0x0c, 0x73, 0x43, 0x89, 0x64, 0x75, 0x19, 0x77, 0xad, 0x0c, 0xa5, 0x50, 0x5f, 0x1a, 0x06, 0x1d,
	0x81, 0xaf, 0x04, 0xa5, 0x45, 0xdc, 0xb3, 0x52, 0x03, 0xd0, 0x05, 0x1c, 0x2c, 0x79, 0x4e, 0x34,
	0xe3, 0x75, 0xa6, 0x37, 0x82, 0xc6, 0xfd, 0xc4, 0x4d, 0xc3, 0xb3, 0xd3, 0x91, 0x31, 0x3d, 0xda,
	0x35, 0x3c, 0xba, 0x6c, 0x2b, 0x67, 0x1b, 0x41, 0xf1, 0xfe, 0x72, 0x0b, 0xed, 0xf4, 0xa9, 0x78,
	0x41, 0xe3, 0xe0, 0x09, 0x7d, 0xae, 0x78, 0xb1, 0xd5, 0xc7, 0x20, 0x74, 0x09, 0x87, 0x39, 0xe7,
	0xb2, 0x60, 0x35, 0xd1, 0xb4, 0x99, 0x08, 0x6c, 0xa7, 0x37, 0x8f, 0x76, 0x3a, 0xbf, 0xaf, 0xb5,
	0x33, 0x85, 0xf9, 0x0e, 0x46, 0xcf, 0xc1, 0x5f, 0x67, 0x05, 0x17, 0xf1, 0x20, 0x71, 0x52, 0x07,
	0x77, 0xd6, 0x63, 0x2e, 0x0c, 0x39, 0xb7, 0xe4, 0x7e, 0x43, 0xce, 0x0d, 0x79, 0x0c, 0x7d, 0xa5,
	0x89, 0xcc, 0xea, 0x55, 0x15, 0x1f, 0x24, 0x4e, 0xea, 0xe3, 0x9e, 0xc1, 0xdf, 0x56, 0x95, 0x49,
	0x56, 0x6d, 0x94, 0xa6, 0x55, 0xb3, 0xe9, 0x30, 0x71, 0x52, 0x0f, 0x43, 0x43, 0xd9, 0x65, 0xbf,
	0x83, 0x43, 0x31, 0xe7, 0x35, 0xcd, 0x0a, 0x26, 0x69, 0x6e, 0xac, 0xc4, 0x87, 0xb6, 0x45, 0x68,
	0xe9, 0xf1, 0x1d, 0x8b, 0x4e, 0x60, 0xc0, 0x54, 0x56, 0xf1, 0x7c, 0x91, 0x95, 0x42, 0xc5, 0x51,
	0xe2, 0xa4, 0x7d, 0x1c, 0x30, 0x75, 0xc5, 0xf3, 0xc5, 0x44, 0xa8, 0xe1, 0x29, 0xec, 0x6f, 0x47,
	0x8c, 0x7a, 0xe0, 0x4d, 0x84, 0x8a, 0xf6, 0x50, 0x1f, 0x3a, 0xd7, 0xd3, 0x8b, 0x69, 0xe4, 0x0c,
	0x4f, 0x1e, 0x4a, 0x6c, 0x5e, 0x5d, 0x70, 0xc7, 0x1f, 0xa3, 0x3d, 0xfb, 0x7b, 0x16, 0x39, 0xc3,
	0xb7, 0x10, 0xee, 0x66, 0x82, 0x02, 0xf0, 0xaf, 0x27, 0xdf, 0x3f, 0x7f, 0x8a, 0xf6, 0xcc, 0xdf,
	0xc9, 0xf9, 0xd7, 0x0f, 0xa6, 0xee, 0xb7, 0x03, 0xd1, 0x43, 0x96, 0x98, 0x0a, 0x2e, 0x35, 0x0a,
	0xc1, 0x25, 0x0b, 0xfb, 0x29, 0x07, 0xd8, 0x25, 0x0b, 0xf4, 0x0a, 0x40, 0x51, 0xb9, 0x66, 0x39,
	0xcd, 0x58, 0x61, 0xbf, 0x63, 0x1f, 0x07, 0x2d, 0x33, 0x2d, 0x4c, 0x30, 0xb7, 0x24, 0x67, 0x4b,
	0xa6, 0x37, 0x46, 0xf7, 0xec, 0x39, 0xb8, 0xa3, 0xa6, 0x05, 0x7a, 0x0f, 0x5d, 0xfb, 0x90, 0x54,
	0xdc, 0x49, 0xbc, 0x74, 0x70, 0x76, 0xf4, 0xd8, 0x0e, 0x71, 0x5b, 0x63, 0x6e, 0x13, 0x37, 0xd9,
	0x9a, 0x4a, 0x65, 0x12, 0xf4, 0x9b, 0xdb, 0xc4, 0xcd, 0x8f, 0x86, 0xb0, 0xc3, 0x68, 0x22, 0x75,
	0xb3, 0x85, 0x6e, 0x3b, 0x8c, 0x61, 0xec, 0x12, 0x8e, 0xa1, 0x4f, 0xeb, 0xa2, 0x11, 0x7b, 0x56,
	0xec, 0xd1, 0xba, 0x30, 0xd2, 0xf0, 0xe7, 0xf6, 0xcb, 0xc5, 0x54, 0x09, 0xf3, 0x16, 0xa8, 0x94,
	0x35, 0xb7, 0x5e, 0x7d, 0xdc, 0x00, 0x14, 0x81, 0x57, 0xa9, 0xd2, 0xfa, 0x0c, 0xb0, 0xf9, 0xfb,
	0x7f, 0x87, 0xbb, 0x09, 0x75, 0xfe, 0x4a, 0x68, 0xa8, 0x20, 0xb0, 0x97, 0x8e, 0x89, 0x26, 0x5b,
	0x69, 0x38, 0x4f, 0x4b, 0x63, 0xcb, 0xae, 0xfb, 0x2f, 0xbb, 0xde, 0x8e, 0xdd, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xd6, 0x95, 0x4e, 0x55, 0xc3, 0x04, 0x00, 0x00,
}
